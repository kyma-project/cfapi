apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.5
  labels:
    app.kubernetes.io/component: dockerregistry-operator.kyma-project.io
    app.kubernetes.io/instance: dockerregistry-operator-crd
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: dockerregistry-operator
    app.kubernetes.io/part-of: dockerregistry-operator
    app.kubernetes.io/version: 0.10.0
    kyma-project.io/module: docker-registry
  name: dockerregistries.operator.kyma-project.io
spec:
  group: operator.kyma-project.io
  names:
    kind: DockerRegistry
    listKind: DockerRegistryList
    plural: dockerregistries
    singular: dockerregistry
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Configured')].status
      name: Configured
      type: string
    - jsonPath: .status.conditions[?(@.type=='Installed')].status
      name: Installed
      type: string
    - jsonPath: .metadata.generation
      name: generation
      type: integer
    - jsonPath: .metadata.creationTimestamp
      name: age
      type: date
    - jsonPath: .status.state
      name: state
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: DockerRegistry is the Schema for the dockerregistry API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: DockerRegistrySpec defines the desired state of DockerRegistry
            properties:
              externalAccess:
                description: ExternalAccess defines the external access configuration.
                properties:
                  enabled:
                    description: |-
                      Enable indicates whether the external access is enabled.
                      default: false
                    type: boolean
                  gateway:
                    description: |-
                      Gateway defines gateway name (in format: <namespace>/<name>)
                      default: kyma-system/kyma-gateway
                    type: string
                  host:
                    description: |-
                      Host defines address under which registry will be exposed
                      should fit to at least one server defined in the gateway
                    type: string
                type: object
              storage:
                description: Storage defines the storage configuration ( filesystem
                  / s3 / azure / gcs / btpObjectStore ).
                properties:
                  azure:
                    properties:
                      secretName:
                        type: string
                    required:
                    - secretName
                    type: object
                  btpObjectStore:
                    properties:
                      secretName:
                        type: string
                    type: object
                  deleteEnabled:
                    type: boolean
                  gcs:
                    properties:
                      bucket:
                        type: string
                      chunksize:
                        type: integer
                      rootdirectory:
                        type: string
                      secretName:
                        type: string
                    required:
                    - bucket
                    type: object
                  pvc:
                    properties:
                      name:
                        type: string
                    required:
                    - name
                    type: object
                  s3:
                    properties:
                      bucket:
                        type: string
                      encrypt:
                        type: boolean
                      region:
                        type: string
                      regionEndpoint:
                        type: string
                      secretName:
                        type: string
                      secure:
                        type: boolean
                    required:
                    - bucket
                    - region
                    type: object
                type: object
            type: object
          status:
            properties:
              conditions:
                description: Conditions associated with CustomStatus.
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              deleteEnabled:
                type: string
              externalAccess:
                description: ExternalAccess contains the external access configuration
                  of the DockerRegistry.
                properties:
                  enabled:
                    description: Enabled indicates whether the network access is enabled.
                    type: string
                  gateway:
                    description: Gateway indicates which gateway is used.
                    type: string
                  pullAddress:
                    description: PullAddress contains address kubernetes can use to
                      pull images from the registry.
                    type: string
                  pushAddress:
                    description: PushAddress contains an address that can be used
                      to push images to the registry from inside the cluster.
                    type: string
                  secretName:
                    description: SecretName is the name of the Secret containing the
                      addresses and auth methods.
                    type: string
                type: object
              internalAccess:
                description: InternalAccess contains the in-cluster access configuration
                  of the DockerRegistry.
                properties:
                  enabled:
                    description: Enabled indicates whether the network access is enabled.
                    type: string
                  pullAddress:
                    description: PullAddress contains address kubernetes can use to
                      pull images from the registry.
                    type: string
                  pushAddress:
                    description: PushAddress contains an address that can be used
                      to push images to the registry from inside the cluster.
                    type: string
                  secretName:
                    description: SecretName is the name of the Secret containing the
                      addresses and auth methods.
                    type: string
                type: object
              pvc:
                type: string
              served:
                description: |-
                  Served signifies that current DockerRegistry is managed.
                  Value can be one of ("True", "False").
                enum:
                - "True"
                - "False"
                type: string
              state:
                description: |-
                  State signifies current state of DockerRegistry.
                  Value can be one of ("Ready", "Processing", "Error", "Deleting").
                enum:
                - Processing
                - Deleting
                - Ready
                - Error
                - Warning
                type: string
              storage:
                description: Storage signifies the storage type of DockerRegistry.
                type: string
            required:
            - served
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: dockerregistry-operator-rbac
    app.kubernetes.io/instance: dockerregistry-operator-sa
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: dockerregistry-operator
    app.kubernetes.io/part-of: dockerregistry-operator
    app.kubernetes.io/version: 0.10.0
    kyma-project.io/module: docker-registry
  name: dockerregistry-operator
  namespace: kyma-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: dockerregistry-operator-rbac
    app.kubernetes.io/instance: dockerregistry-operator-clusterrole
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: dockerregistry-operator
    app.kubernetes.io/part-of: dockerregistry-operator
    app.kubernetes.io/version: 0.10.0
    kyma-project.io/module: docker-registry
  name: dockerregistry-operator-role
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - namespaces
  - persistentvolumeclaims
  - secrets
  - serviceaccounts
  - services
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - get
  - list
  - patch
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - mutatingwebhookconfigurations
  - validatingwebhookconfigurations
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - apps
  resources:
  - daemonsets
  - deployments
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - apps
  resources:
  - deployments/status
  verbs:
  - get
- apiGroups:
  - apps
  resources:
  - replicasets
  verbs:
  - list
- apiGroups:
  - autoscaling
  resources:
  - horizontalpodautoscalers
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - batch
  resources:
  - jobs/status
  verbs:
  - get
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - networking.istio.io
  resources:
  - gateways
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.istio.io
  resources:
  - virtualservices
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - operator.kyma-project.io
  resources:
  - dockerregistries
  - dockerregistries/finalizers
  - dockerregistries/status
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - policy
  resources:
  - podsecuritypolicies
  verbs:
  - use
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  - clusterroles
  - rolebindings
  - roles
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - scheduling.k8s.io
  resources:
  - priorityclasses
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - list
  - patch
  - update
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: dockerregistry-operator-rbac
    app.kubernetes.io/instance: dockerregistry-operator-clusterrolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: dockerregistry-operator
    app.kubernetes.io/part-of: dockerregistry-operator
    app.kubernetes.io/version: 0.10.0
    kyma-project.io/module: docker-registry
  name: dockerregistry-operator-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: dockerregistry-operator-role
subjects:
- kind: ServiceAccount
  name: dockerregistry-operator
  namespace: kyma-system
---
apiVersion: v1
data:
  actionCommands: |
    - name: "config [flags]"
      description: "Saves Kyma registry dockerconfig to a file"
      descriptionLong: "Use this command to save Kyma registry dockerconfig to a file."
      action:
        functionID: registry_config
        customFlags:
        - type: bool
          name: "externalurl"
          description: "External URL for the Kyma registry"
          path: ".pushRegAddrOnly"
          default: false
        - type: string
          name: "output"
          description: "Path where the output file should be saved to. NOTE: docker expects the file to be named `config.json`"
          path: ".output"
        config:
          useExternal: true
    - name: "image-import <image> [flags]"
      description: "Import image to in-cluster registry"
      descriptionLong: "Import image from daemon to in-cluster registry."
      action:
        functionID: registry_image-import
  coreCommands: |
    - actionID: registry_config
    - actionID: registry_image-import
  rootCommand: |
    name: registry
    description: A set of commands for the Kyma registry
    descriptionLong: Use this command to manage resources related to the Kyma registry.
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/component: cli
    app.kubernetes.io/instance: cli-dockerregistry-operator
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: dockerregistry-operator
    app.kubernetes.io/part-of: dockerregistry-operator
    app.kubernetes.io/version: 0.10.0
    kyma-cli/extension: resource
    kyma-cli/extension-version: v1
    kyma-project.io/module: docker-registry
  name: dockerregistry-operator.cli-compat
  namespace: kyma-system
---
apiVersion: v1
data:
  details: "status:\n  body:\n    - name: status.storageType\n      source: status.storage\n
    \   - name: status.deleteEnabled\n      source: status.deleteEnabled\n    - name:
    status.pvc  \n      source: status.pvc\n      visibility: status.pvc\n    - name:
    status.conditions\n      widget: ConditionList\n      source: status.conditions\nbody:\n
    \ - widget: Alert\n    severity: warning\n    source: '\"alert.filesystemstorage\"'\n
    \   visibility: $root.status.storage = 'filesystem'\n  - name: details.internalAccess\n
    \   widget: Panel\n    visibility: \"$exists(status.internalAccess.enabled)\"\n
    \   children:\n      - name: details.enabled\n        visibility: \"$exists($value)\"\n
    \       source: status.internalAccess.enabled\n      - name: details.access.pullAddress\n
    \       visibility: \"$exists($value)\"\n        source: status.internalAccess.pullAddress\n
    \     - name: details.access.pushAddress\n        visibility: \"$exists($value)\"\n
    \       source: status.internalAccess.pushAddress\n      - name: details.secret\n
    \       visibility: \"$exists($value)\"\n        source: status.internalAccess.secretName\n
    \       widget: ResourceLink\n        resource:\n          name: status.internalAccess.secretName\n
    \         namespace: $root.metadata.namespace\n          kind: \"'Secret'\"\n
    \ - name: details.externalAccess\n    widget: Panel\n    visibility: \"$exists(status.externalAccess.enabled)\"\n
    \   children:\n      - name: details.enabled\n        visibility: \"$exists($value)\"\n
    \       source: status.externalAccess.enabled\n      - name: details.gateway\n
    \       visibility: \"$exists($value)\"\n        source: status.externalAccess.gateway\n
    \     - name: details.access.pullAddress\n        visibility: \"$exists($value)\"\n
    \       source: status.externalAccess.pullAddress\n      - name: details.access.pushAddress\n
    \       visibility: \"$exists($value)\"\n        source: status.externalAccess.pushAddress\n
    \     - name: details.secret\n        visibility: \"$exists($value)\"\n        source:
    status.externalAccess.secretName\n        widget: ResourceLink\n        resource:\n
    \         name: status.externalAccess.secretName\n          namespace: $root.metadata.namespace\n
    \         kind: \"'Secret'\"\n\n  - name: details.events\n    widget: EventList\n
    \   filter: \"$matchEvents($$, $root.kind, $root.metadata.name)\"\n    defaultType:
    information\n"
  form: |
    - name: details.storage.title
      path: spec.storage
      widget: FormGroup
      defaultExpanded: true
      subscribe:
        # we want to only have up to one storage field at all times
        storage: undefined
      # dynamic
      children:
        - name: details.storage.type.title
          var: storageType
          type: string
          reuired: true
          dynamicValue: >-
            $exists(spec.storage.azure) ? 'azure' :
            $exists(spec.storage.s3) ? 's3' :
            $exists(spec.storage.gcs) ? 'gcs' :
            $exists(spec.storage.btpObjectStore) ? 'btpObjectStore' :
            $exists(spec.storage.pvc) ? 'pvc' :
            'filesystem'
          trigger: [storage]
          enum:
            - filesystem
            - azure
            - s3
            - gcs
            - btpObjectStore
            - pvc
        # Azure
        - name: details.storage.azureSecret
          path: azure.secretName
          visibility: "$storageType = 'azure'"
          widget: Resource
          resource:
            kind: Secret
            version: v1
            scope: namespace
          filter: >-
            $exists($item.data.accountKey) and
            $exists($item.data.accountName) and
            $exists($item.data.container)
        # s3
        - name: details.storage.bucket
          path: s3.bucket
          visibility: "$storageType = 's3'"
        - name: details.storage.region
          path: s3.region
          visibility: "$storageType = 's3'"
        - name: details.storage.regionEndpoint
          path: s3.regionEndpoint
          visibility: "$storageType = 's3'"
        - name: details.storage.encrypt
          path: s3.encrypt
          visibility: "$storageType = 's3'"
        - name: details.storage.secure
          path: s3.secure
          visibility: "$storageType = 's3'"
        - name: details.storage.s3Secret
          path: s3.secretName
          visibility: "$storageType = 's3'"
          widget: Resource
          resource:
            kind: Secret
            version: v1
            scope: namespace
          filter: >-
            $exists($item.data.accessKey) and
            $exists($item.data.secretKey)
        # gcs
        - name: details.storage.bucket
          path: gcs.bucket
          visibility: "$storageType = 'gcs'"
        - name: details.storage.rootdirectory
          path: gcs.rootdirectory
          visibility: "$storageType = 'gcs'"
        - name: details.storage.chunksize
          path: gcs.chunksize
          visibility: "$storageType = 'gcs'"
        - name: details.storage.gcsSecret
          path: gcs.secretName
          visibility: "$storageType = 'gcs'"
          widget: Resource
          required: true
          resource:
            kind: Secret
            version: v1
            scope: namespace
          filter: >-
            $exists($item.data.accountkey)
        # btp
        - name: details.storage.btpObjectStoreSecret
          path: btpObjectStore.secretName
          visibility: "$storageType = 'btpObjectStore'"
          widget: Resource
          required: true
          resource:
            kind: Secret
            version: v1
            scope: namespace
          filter: >-
            $exists($item.data.tags) and
            $exists($item.data.type) and
            $exists($item.data.label)
        # pvc
        - name: details.storage.pvc
          path: pvc.name
          visibility: "$storageType = 'pvc'"
          widget: Resource
          resource:
            kind: PersistentVolumeClaim
            version: v1
            scope: namespace
        - name: details.storage.deleteEnabled
          path: deleteEnabled
          type: boolean
    - name: details.externalAccess
      path: spec.externalAccess
      widget: FormGroup
      defaultExpanded: true
      children:
        - name: details.enabled
          dynamicValue: "$exists(spec.externalAccess.gateway) or $exists(spec.externalAccess.host)"
          path: enabled
        - name: details.gateway
          path: gateway
          overwrite: false
          visibility: "$boolean(spec.externalAccess.enabled)"
        - name: details.host
          path: host
          overwrite: false
          visibility: "$boolean(spec.externalAccess.enabled)"
  general: |
    resource:
      kind: DockerRegistry
      group: operator.kyma-project.io
      version: v1alpha1
    urlPath: dockerregistries
    category: Kyma
    name: Docker Registry
    scope: namespace
    features:
      actions:
        disableCreate: true
        disableEdit: false
        disableDelete: true
    description: >-
      {{[DockerRegistry CR](https://github.com/kyma-project/docker-registry/blob/main/config/samples/default-dockerregistry-cr.yaml)}}
      specifies the dockerregistry module.
  list: |
    - name: header.storage
      source: status.storage
    - name: header.externalAccess
      source: status.externalAccess.enabled
    - name: header.status
      source: status.state
      widget: Badge
      highlights:
        positive:
          - "Ready"
        informative:
          - "Processing"
        warning:
          - "Warning"
        critical:
          - "Error"
          # deleting is none of the above, so it should default to a gray badge
          # - "Deleting"
  translations: "en:\n  alert:\n    filesystemstorage: Storage type `filesystem` uses
    non persistant storage. In this mode registry content will be dropped upon any
    reconfiguration. \n  status:\n    conditions: Conditions Details\n    storageType:
    Storage Type\n    deleteEnabled: Image Deletion Enabled\n    pvc: PVC\n  header:\n
    \   ready: Ready\n    storage: Storage\n    externalAccess: External Access\n
    \   status: Status\n  details:\n    desired:\n      secret: Docker Registry Secret\n
    \     externalAccess:\n        enabled: External Access\n    status:\n      title:
    Reconciliation Conditions\n    internalAccess: Internal Access\n    externalAccess:
    External Access\n    enabled: Enabled\n    gateway: Gateway\n    host: Host\n
    \   access:\n      pullAddress: Pull Address\n      pushAddress: Push Address\n
    \   secret: Secret\n    events: Events\n    storage:\n      title: Storage\n      type:\n
    \       title: Storage Type\n      pvc: PersistentVolumeClaim\n      bucket: Bucket\n
    \     rootdirectory: Root Directory\n      chunksize: Chunk Size\n      region:
    Region\n      regionEndpoint: Region Endpoint\n      encrypt: Encrypt\n      secure:
    Secure\n      azureSecret: Azure Secret\n      s3Secret: S3 Secret\n      gcsSecret:
    GCS Secret\n      btpObjectStoreSecret: BTP Object Store Secret\n      deleteEnabled:
    Image Deletion Enabled\n"
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/component: busola
    app.kubernetes.io/instance: busola-dockerregistry-operator
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: dockerregistry-operator
    app.kubernetes.io/part-of: dockerregistry-operator
    app.kubernetes.io/version: 0.10.0
    busola.io/extension: resource
    busola.io/extension-version: "0.5"
    kyma-project.io/module: docker-registry
  name: dockerregistry-operator.kyma-project.io
  namespace: kyma-system
---
apiVersion: scheduling.k8s.io/v1
description: Scheduling priority of the dockerregistry-operator. Must not be blocked
  by unschedulable user workloads.
globalDefault: false
kind: PriorityClass
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: dockerregistry-operator
    app.kubernetes.io/part-of: dockerregistry-operator
    app.kubernetes.io/version: 0.10.0
    kyma-project.io/module: docker-registry
  name: dockerregistry-operator-priority
value: 2000000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: dockerregistry-operator.kyma-project.io
    app.kubernetes.io/instance: dockerregistry-operator-deployment
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: dockerregistry-operator
    app.kubernetes.io/part-of: dockerregistry-operator
    app.kubernetes.io/version: 0.10.0
    control-plane: operator
    kyma-project.io/module: docker-registry
  name: dockerregistry-operator
  namespace: kyma-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: dockerregistry-operator.kyma-project.io
      control-plane: operator
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        app.kubernetes.io/component: dockerregistry-operator.kyma-project.io
        app.kubernetes.io/instance: dockerregistry-operator
        app.kubernetes.io/managed-by: kustomize
        app.kubernetes.io/name: dockerregistry-operator
        app.kubernetes.io/part-of: dockerregistry-operator
        app.kubernetes.io/version: 0.10.0
        control-plane: operator
        kyma-project.io/module: docker-registry
        sidecar.istio.io/inject: "false"
    spec:
      containers:
      - command:
        - /operator
        env:
        - name: DOCKERREGISTRY_MANAGER_UID
          valueFrom:
            fieldRef:
              fieldPath: metadata.uid
        image: europe-docker.pkg.dev/kyma-project/prod/dockerregistry-operator:0.10.0
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 1000m
            memory: 512Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      priorityClassName: dockerregistry-operator-priority
      securityContext:
        runAsNonRoot: true
      serviceAccountName: dockerregistry-operator
      terminationGracePeriodSeconds: 10
