name: Release Draft Workflow

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

env:
  REGISTRY: ghcr.io

jobs:
  linter:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/cache@v4
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    - uses: actions/setup-go@v5
      with:
        go-version: '1.24.1'
    - name: Run linters
      run: make lint

  tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - uses: actions/cache@v4
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - uses: actions/setup-go@v5
      with:
        go-version: '1.24.1'

    - name: Run tests
      run: make test

  create-draft-release:
    runs-on: [ ubuntu-latest ]

    permissions:
      contents: write
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: set version
        run: echo "version=${GITHUB_REF_NAME#v}" >> $GITHUB_OUTPUT
        id: version

      - name: prepare release artifacts
        env:
          VERSION: ${{ steps.version.outputs.version }}
        run: |
          make release VERSION=${VERSION} REGISTRY=${REGISTRY}

      - name: Create draft release
        env:
          VERSION: ${{ steps.version.outputs.version }}
          GITHUB_TOKEN: ${{ github.token }}
        shell: bash
        run: |
          gh release create "${VERSION}" --draft

      - name: Upload release artifacts
        env:
          VERSION: ${{ steps.version.outputs.version }}
          GITHUB_TOKEN: ${{ github.token }}
        shell: bash
        run: |
          gh release upload "${VERSION}" "./release/${VERSION}/cfapi/cfapi-default-cr.yaml"
          gh release upload "${VERSION}" "./release/${VERSION}/cfapi/cfapi-operator.yaml"
